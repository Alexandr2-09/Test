<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TestBdDataSet" targetNamespace="http://tempuri.org/TestBdDataSet.xsd" xmlns:mstns="http://tempuri.org/TestBdDataSet.xsd" xmlns="http://tempuri.org/TestBdDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestBdConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestBdConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Test.Properties.Settings.GlobalReference.Default.TestBdConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestAutorizationTableAdapter" GeneratorDataComponentClassName="TestAutorizationTableAdapter" Name="TestAutorization" UserDataComponentName="TestAutorizationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestBdConnectionString (Settings)" DbObjectName="TestBd.dbo.TestAutorization" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TestAutorization] WHERE (([TestAutorizationId] = @Original_TestAutorizationId) AND ((@IsNull_Login = 1 AND [Login] IS NULL) OR ([Login] = @Original_Login)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestAutorizationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestAutorizationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Login" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TestAutorization] ([Login], [Password]) VALUES (@Login, @Password);
SELECT TestAutorizationId, Login, Password FROM TestAutorization WHERE (TestAutorizationId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TestAutorizationId, Login, Password FROM dbo.TestAutorization</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TestAutorization] SET [Login] = @Login, [Password] = @Password WHERE (([TestAutorizationId] = @Original_TestAutorizationId) AND ((@IsNull_Login = 1 AND [Login] IS NULL) OR ([Login] = @Original_Login)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)));
SELECT TestAutorizationId, Login, Password FROM TestAutorization WHERE (TestAutorizationId = @TestAutorizationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestAutorizationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestAutorizationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Login" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TestAutorizationId" ColumnName="TestAutorizationId" DataSourceName="TestBd.dbo.TestAutorization" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TestAutorizationId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TestAutorizationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TestAutorizationId" DataSetColumn="TestAutorizationId" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestTable1TableAdapter" GeneratorDataComponentClassName="TestTable1TableAdapter" Name="TestTable1" UserDataComponentName="TestTable1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestBdConnectionString (Settings)" DbObjectName="TestBd.dbo.TestTable1" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TestTable1] WHERE (([TestId1] = @Original_TestId1) AND ((@IsNull_TestData = 1 AND [TestData] IS NULL) OR ([TestData] = @Original_TestData)) AND ((@IsNull_TestData2 = 1 AND [TestData2] IS NULL) OR ([TestData2] = @Original_TestData2)) AND ([TestTable2Id] = @Original_TestTable2Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestId1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestId1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestData" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestData2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestData2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestTable2Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestTable2Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TestTable1] ([TestData], [TestData2], [TestTable2Id]) VALUES (@TestData, @TestData2, @TestTable2Id);
SELECT TestId1, TestData, TestData2, TestTable2Id FROM TestTable1 WHERE (TestId1 = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestData2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestTable2Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestTable2Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TestId1, TestData, TestData2, TestTable2Id FROM dbo.TestTable1</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TestTable1] SET [TestData] = @TestData, [TestData2] = @TestData2, [TestTable2Id] = @TestTable2Id WHERE (([TestId1] = @Original_TestId1) AND ((@IsNull_TestData = 1 AND [TestData] IS NULL) OR ([TestData] = @Original_TestData)) AND ((@IsNull_TestData2 = 1 AND [TestData2] IS NULL) OR ([TestData2] = @Original_TestData2)) AND ([TestTable2Id] = @Original_TestTable2Id));
SELECT TestId1, TestData, TestData2, TestTable2Id FROM TestTable1 WHERE (TestId1 = @TestId1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestData2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestTable2Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestTable2Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestId1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestId1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestData" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestData2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestData2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestTable2Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestTable2Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TestId1" ColumnName="TestId1" DataSourceName="TestBd.dbo.TestTable1" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TestId1" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TestId1" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TestId1" DataSetColumn="TestId1" />
              <Mapping SourceColumn="TestData" DataSetColumn="TestData" />
              <Mapping SourceColumn="TestData2" DataSetColumn="TestData2" />
              <Mapping SourceColumn="TestTable2Id" DataSetColumn="TestTable2Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestTable2TableAdapter" GeneratorDataComponentClassName="TestTable2TableAdapter" Name="TestTable2" UserDataComponentName="TestTable2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestBdConnectionString (Settings)" DbObjectName="TestBd.dbo.TestTable2" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TestTable2] WHERE (([TestId2] = @Original_TestId2) AND ([TestAutorizationId] = @Original_TestAutorizationId) AND ((@IsNull_TestData = 1 AND [TestData] IS NULL) OR ([TestData] = @Original_TestData)) AND ((@IsNull_TestData2 = 1 AND [TestData2] IS NULL) OR ([TestData2] = @Original_TestData2)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestId2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestId2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestAutorizationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestAutorizationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestData" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestData2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestData2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TestTable2] ([TestAutorizationId], [TestData], [TestData2]) VALUES (@TestAutorizationId, @TestData, @TestData2);
SELECT TestId2, TestAutorizationId, TestData, TestData2 FROM TestTable2 WHERE (TestId2 = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestAutorizationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestAutorizationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestData2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TestId2, TestAutorizationId, TestData, TestData2 FROM dbo.TestTable2</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TestTable2] SET [TestAutorizationId] = @TestAutorizationId, [TestData] = @TestData, [TestData2] = @TestData2 WHERE (([TestId2] = @Original_TestId2) AND ([TestAutorizationId] = @Original_TestAutorizationId) AND ((@IsNull_TestData = 1 AND [TestData] IS NULL) OR ([TestData] = @Original_TestData)) AND ((@IsNull_TestData2 = 1 AND [TestData2] IS NULL) OR ([TestData2] = @Original_TestData2)));
SELECT TestId2, TestAutorizationId, TestData, TestData2 FROM TestTable2 WHERE (TestId2 = @TestId2)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestAutorizationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestAutorizationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TestData2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestId2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestId2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestAutorizationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestAutorizationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestData" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestData2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TestData2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TestData2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TestId2" ColumnName="TestId2" DataSourceName="TestBd.dbo.TestTable2" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TestId2" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TestId2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TestId2" DataSetColumn="TestId2" />
              <Mapping SourceColumn="TestAutorizationId" DataSetColumn="TestAutorizationId" />
              <Mapping SourceColumn="TestData" DataSetColumn="TestData" />
              <Mapping SourceColumn="TestData2" DataSetColumn="TestData2" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TestBdDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TestBdDataSet" msprop:Generator_UserDSName="TestBdDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TestAutorization" msprop:Generator_TableClassName="TestAutorizationDataTable" msprop:Generator_TableVarName="tableTestAutorization" msprop:Generator_TablePropName="TestAutorization" msprop:Generator_RowDeletingName="TestAutorizationRowDeleting" msprop:Generator_RowChangingName="TestAutorizationRowChanging" msprop:Generator_RowEvHandlerName="TestAutorizationRowChangeEventHandler" msprop:Generator_RowDeletedName="TestAutorizationRowDeleted" msprop:Generator_UserTableName="TestAutorization" msprop:Generator_RowChangedName="TestAutorizationRowChanged" msprop:Generator_RowEvArgName="TestAutorizationRowChangeEvent" msprop:Generator_RowClassName="TestAutorizationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TestAutorizationId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTestAutorizationId" msprop:Generator_ColumnPropNameInRow="TestAutorizationId" msprop:Generator_ColumnPropNameInTable="TestAutorizationIdColumn" msprop:Generator_UserColumnName="TestAutorizationId" type="xs:int" />
              <xs:element name="Login" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_UserColumnName="Login" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TestTable1" msprop:Generator_TableClassName="TestTable1DataTable" msprop:Generator_TableVarName="tableTestTable1" msprop:Generator_TablePropName="TestTable1" msprop:Generator_RowDeletingName="TestTable1RowDeleting" msprop:Generator_RowChangingName="TestTable1RowChanging" msprop:Generator_RowEvHandlerName="TestTable1RowChangeEventHandler" msprop:Generator_RowDeletedName="TestTable1RowDeleted" msprop:Generator_UserTableName="TestTable1" msprop:Generator_RowChangedName="TestTable1RowChanged" msprop:Generator_RowEvArgName="TestTable1RowChangeEvent" msprop:Generator_RowClassName="TestTable1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TestId1" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTestId1" msprop:Generator_ColumnPropNameInRow="TestId1" msprop:Generator_ColumnPropNameInTable="TestId1Column" msprop:Generator_UserColumnName="TestId1" type="xs:int" />
              <xs:element name="TestData" msprop:Generator_ColumnVarNameInTable="columnTestData" msprop:Generator_ColumnPropNameInRow="TestData" msprop:Generator_ColumnPropNameInTable="TestDataColumn" msprop:Generator_UserColumnName="TestData" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TestData2" msprop:Generator_ColumnVarNameInTable="columnTestData2" msprop:Generator_ColumnPropNameInRow="TestData2" msprop:Generator_ColumnPropNameInTable="TestData2Column" msprop:Generator_UserColumnName="TestData2" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TestTable2Id" msprop:Generator_ColumnVarNameInTable="columnTestTable2Id" msprop:Generator_ColumnPropNameInRow="TestTable2Id" msprop:Generator_ColumnPropNameInTable="TestTable2IdColumn" msprop:Generator_UserColumnName="TestTable2Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TestTable2" msprop:Generator_TableClassName="TestTable2DataTable" msprop:Generator_TableVarName="tableTestTable2" msprop:Generator_TablePropName="TestTable2" msprop:Generator_RowDeletingName="TestTable2RowDeleting" msprop:Generator_RowChangingName="TestTable2RowChanging" msprop:Generator_RowEvHandlerName="TestTable2RowChangeEventHandler" msprop:Generator_RowDeletedName="TestTable2RowDeleted" msprop:Generator_UserTableName="TestTable2" msprop:Generator_RowChangedName="TestTable2RowChanged" msprop:Generator_RowEvArgName="TestTable2RowChangeEvent" msprop:Generator_RowClassName="TestTable2Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TestId2" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTestId2" msprop:Generator_ColumnPropNameInRow="TestId2" msprop:Generator_ColumnPropNameInTable="TestId2Column" msprop:Generator_UserColumnName="TestId2" type="xs:int" />
              <xs:element name="TestAutorizationId" msprop:Generator_ColumnVarNameInTable="columnTestAutorizationId" msprop:Generator_ColumnPropNameInRow="TestAutorizationId" msprop:Generator_ColumnPropNameInTable="TestAutorizationIdColumn" msprop:Generator_UserColumnName="TestAutorizationId" type="xs:int" />
              <xs:element name="TestData" msprop:Generator_ColumnVarNameInTable="columnTestData" msprop:Generator_ColumnPropNameInRow="TestData" msprop:Generator_ColumnPropNameInTable="TestDataColumn" msprop:Generator_UserColumnName="TestData" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TestData2" msprop:Generator_ColumnVarNameInTable="columnTestData2" msprop:Generator_ColumnPropNameInRow="TestData2" msprop:Generator_ColumnPropNameInTable="TestData2Column" msprop:Generator_UserColumnName="TestData2" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TestAutorization" />
      <xs:field xpath="mstns:TestAutorizationId" />
    </xs:unique>
    <xs:unique name="TestTable1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TestTable1" />
      <xs:field xpath="mstns:TestId1" />
    </xs:unique>
    <xs:unique name="TestTable2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TestTable2" />
      <xs:field xpath="mstns:TestId2" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_TestTable1_TestTable2" msdata:parent="TestTable2" msdata:child="TestTable1" msdata:parentkey="TestId2" msdata:childkey="TestTable2Id" msprop:Generator_UserChildTable="TestTable1" msprop:Generator_ChildPropName="GetTestTable1Rows" msprop:Generator_UserRelationName="FK_TestTable1_TestTable2" msprop:Generator_RelationVarName="relationFK_TestTable1_TestTable2" msprop:Generator_UserParentTable="TestTable2" msprop:Generator_ParentPropName="TestTable2Row" />
      <msdata:Relationship name="FK_TestTable2_TestAutorization" msdata:parent="TestAutorization" msdata:child="TestTable2" msdata:parentkey="TestAutorizationId" msdata:childkey="TestAutorizationId" msprop:Generator_UserChildTable="TestTable2" msprop:Generator_ChildPropName="GetTestTable2Rows" msprop:Generator_UserRelationName="FK_TestTable2_TestAutorization" msprop:Generator_ParentPropName="TestAutorizationRow" msprop:Generator_RelationVarName="relationFK_TestTable2_TestAutorization" msprop:Generator_UserParentTable="TestAutorization" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>